Divide a matrix
===============

Test for function that divides a matrix and returns the divided matrix

Usage
=====

``matrix_divided(matrix, div)`` returns a copy matrix with all elements
divided by ``div``

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> print(matrix_divided([[0, 4, 8], [10, 20, 30]], 2))
    [[0.0, 2.0, 4.0], [5.0, 10.0, 15.0]]

::

Test matrix for division with zero
==================================

    >>> print(matrix_divided([[1,2,3],[3,2,1]], 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero


::

Test mattrix having types other than integers or float
======================================================

    >>> print(matrix_divided([[1,2,3],[3,2,'g']],2))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

Test that the divisor is a number i.e type (int/float)
======================================================

    >>> print(matrix_divided([[1,2,3],[3,2,1]], '4'))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

::

Test for equal matrix row 
=========================

    >>> print(matrix_divided([[1,2,3],[1,2]], 3))
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
